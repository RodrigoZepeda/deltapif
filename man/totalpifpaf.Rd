% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/04-pif_operations.R
\name{totalpifpaf}
\alias{totalpifpaf}
\alias{paf_total}
\alias{pif_total}
\alias{pif_ensemble}
\title{Combine Potential Impact Fractions and Population Attributable Fractions}
\usage{
paf_total(
  paf1,
  ...,
  pif_weights,
  sigma_pif_weights = 0,
  conf_level = 0.95,
  link = "log-complement",
  link_inv = NULL,
  link_deriv = NULL,
  quiet = FALSE
)

pif_total(
  pif1,
  ...,
  pif_weights,
  sigma_pif_weights = 0,
  conf_level = 0.95,
  link = "log-complement",
  link_inv = NULL,
  link_deriv = NULL,
  quiet = FALSE
)

pif_ensemble(
  pif1,
  ...,
  pif_weights = NULL,
  sigma_pif_weights = NULL,
  link = "identity",
  link_inv = NULL,
  link_deriv = NULL,
  conf_level = 0.95,
  quiet = FALSE
)
}
\arguments{
\item{paf1}{A population attributable fraction (class \code{pif_class})}

\item{...}{The remaining potential impact fractions or (respectively)
population attributable fractions.}

\item{pif_weights}{A vector containing the proportion of the population
for each of the categories (for each of the pifs given).}

\item{sigma_pif_weights}{Colink_variance structure for the \code{pif_weights}. Can be \code{0} (default) if
the pif_weights are not random, a vector if only the link_variances of the pif_weights
are available or a colink_variance matrix.}

\item{conf_level}{Confidence level for the confidence interval (default 0.95).}

\item{link}{Link function such that the \code{pif} confidence intervals
stays within the expected bounds.}

\item{link_inv}{The inverse of \code{link}. For example if \code{link}
is \code{logit} this should be \code{inv_logit}.}

\item{link_deriv}{Derivative of the \code{link} function. The function tries
to build it automatically from \code{link} using \code{\link[Deriv:Deriv]{Deriv::Deriv()}}.}

\item{quiet}{Whether to show messages.}

\item{pif1}{A potential impact fraction (class \code{pif_class})}
}
\description{
Combine potential impact fractions or the population attributable fractions
to either generate the total fraction from the fractions of
subpopulations (\code{pif_total/paf_total}) or the ensemble fraction of a population
from different (independent) exposures.
}
\section{Total potential impact fraction}{


Assuming the overall population can be subdivided into \eqn{N} distinct
subpopulations each of them with a different potential impact fraction
(or population attributable fraction) we can estimate
the total population attributable fraction or potential impact
fraction of the whole population as:

\deqn{
 \text{PIF}_{\text{Total}} = \sum\limits_{i = 1}^{N} \pi_i \cdot \text{PIF}_i
}

where each \eqn{\text{PIF}_i} corresponds to the potential impact
fraction of the i-th subpopulation and \eqn{\pi_i} correspond to
the proportion of the total population occupied by \eqn{\text{PIF}_i}.
The pif_weights are such that \eqn{\sum_{i=1}^{N} \pi_i = 1}.
}

\section{Ensemble potential impact fraction}{


If a population is exposed to \eqn{K} different independent risk factors
then the ensemble impact fraction of the combination of those factors
can be written as:

\deqn{
 \text{PIF}_{\text{Ensemble}} = 1 - \prod\limits_{\ell = 1}^{K} \Big(1 - \cdot \text{PIF}_{\ell}\Big)
}

where each \eqn{\text{PIF}_{\ell}} corresponds to the potential impact
fraction of the \eqn{\ell}-th risk factor for the same population.
}

\examples{
#Potential impact fraction for women
pif_women <- pif(0.32, 0.1, 1.2, quiet = TRUE, var_p = 0.1)

#Potential impact fraction for men
pif_men <- pif(0.27, 0.1, 1.3, quiet = TRUE, var_p = 0.1)

#Population potential impact fraction with 49\% men and 51\% women
pif_total(pif_men, pif_women, pif_weights = c(0.49, 0.51), link = "logit")

#Population attributable  fraction for women
paf_women <- paf(0.32, 1.3, quiet = TRUE, var_p = 0.1)

#Population attributable  fraction for men
paf_men <- paf(0.27, 1.3, quiet = TRUE, var_p = 0.1)
paf_total(paf_men, paf_women, pif_weights = c(0.49, 0.51), link = "logit")

# Calculate the ensemble from lead and radiation exposure
paf_lead <- paf(0.2, 2.2, quiet = TRUE, var_p = 0.001)
paf_rad  <- paf(0.1, 1.2, quiet = TRUE, var_p = 0.0001)
pif_ensemble(paf_lead, paf_rad)

# Totals and ensembles can be combined
pif_lead_women <- paf(0.27, 2.2, quiet = TRUE, var_p = 0.001)
pif_rad_women  <- paf(0.12, 1.2, quiet = TRUE, var_p = 0.001)
pif_women      <- pif_ensemble(pif_lead_women, pif_rad_women)
pif_lead_men   <- paf(0.30, 2.2, quiet = TRUE, var_p = 0.001)
pif_rad_men    <- paf(0.10, 1.2, quiet = TRUE, var_p = 0.001)
pif_men        <- pif_ensemble(pif_lead_men, pif_rad_men)

pif_total(pif_men, pif_women, pif_weights = c(0.49, 0.51))
}
